<h2 class="text-2xl font-semibold mb-4">Students List</h2>
<div>
  <div class="flex flex-col md:flex-row justify-between items-left gap-4 mb-4">
    <%= form_with url: admin_classes_manage_path(@school_class), method: :get, local: true do |form| %>
      <div class="flex flex-col md:flex-row gap-2 w-full md:w-auto">
        <% if @school_year.any? %>
          <div class="field">
            <%= form.label :school_year %>
            <%= form.select :student_school_year_id, options_from_collection_for_select(@school_year, :id, :name, selected: params[:student_school_year_id]), {}, class: "select select-bordered w-full md:w-auto", onchange: "this.form.submit();" %>
          </div>
        <% end %>

        <% if @sections.any? %>
          <div class="field">
            <%= form.label :school_section %>
            <%= form.select :student_school_section_id, options_from_collection_for_select(@sections, :id, :name, selected: params[:student_school_section_id]), {}, class: "select select-bordered w-full md:w-auto", onchange: "this.form.submit();" %>
          </div>
        <% end %>

        <% if @subjects.any? %>
          <div class="field">
            <%= form.label :subject %>
            <%= form.select :subject_id, options_from_collection_for_select(@subjects, :id, :name, selected: params[:subject_id]), {}, class: "select select-bordered w-full md:w-auto", onchange: "this.form.submit();" %>
          </div>
        <% end %>
        
      </div>
    <% end %>
    <div class="flex flex-row gap-2 w-full md:w-auto">
      <div class="flex flex-row gap-2 md:w-auto lg:w-auto">
        <div class="join">
          <div class="flex flex-row gap-2 w-full md:w-auto">
            <div class="flex flex-row gap-2 md:w-auto lg:w-auto">
              <%= link_to "Manage SY", admin_classes_class_sy_manage_index_path(@school_class), class: "btn join-item" %>
              <%= link_to "Manage Sections", admin_classes_class_sy_sections_manage_index_path(@school_class), class: "btn join-item" %>

              <% if @school_year.empty? || @sections.empty? %>
                <%= button_to "Assign Student", "#", class: "btn join-item", data: { 'turbo-confirm': 'School year and sections cannot be empty.' } %>
              <% else %>
                <%= link_to "Assign Student", admin_classes_class_sy_students_manage_index_path(@school_class), class: "btn join-item" %>
              <% end %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <br>
  <section>
    <div class="overflow-x-auto">
      <%= form_with url: unassign_selected_admin_classes_class_sy_students_manage_index_path(@school_class), method: :post, id: "students_batch_form", data: { turbo_confirm: "Are you sure you want to unassign the selected students?" } do |f| %>
        <%= f.hidden_field :school_section_id, value: params[:student_school_section_id] %>
        <table class="table table-sm mb-6">
          <thead>
            <tr>
              <th>
                <label>
                  <input type="checkbox" class="checkbox" id="select_all_students" />
                </label>
              </th>
              <th>Name</th>
              <th>Created At</th>
              <th>Updated At</th>
            </tr>
          </thead>
          <tbody>
            <% if @students.present? %>
              <% @students.each do |student| %>
                <tr class="hover">
                  <th>
                    <label>
                      <%= f.check_box :student_ids, { multiple: true, class: "checkbox student-checkbox" }, student.id, nil %>
                    </label>
                  </th>
                  <td>
                    <div class="flex items-center gap-3">
                      <span><%= student.name %></span>
                    </div>
                  </td>
                  <td><span><%= format_date student.created_at %></span></td>
                  <td><span><%= format_date student.updated_at %></span></td>
                </tr>
              <% end %>
            <% else %>
              <tr>
                <td colspan="4" class="text-center py-4 text-gray-500">
                  No enrolled students yet
                </td>
              </tr>
            <% end %>
          </tbody>
        </table>
        <div class="flex justify-between items-center">
          <span><%= @student_count %> Students</span>
          <%= f.submit "Unassign Selected", id: "unassign_students", class: "btn btn-primary hidden" %>
        </div>
      <% end %>
    </div>
  </section>
</div>

<script>
document.addEventListener('turbo:load', function() {
  // Students batch unassign
  const unassignStudentsButton = document.getElementById('unassign_students');
  const studentCheckboxes = document.querySelectorAll('.student-checkbox');
  const selectAllStudentsCheckbox = document.getElementById('select_all_students');

  function toggleUnassignStudentsButton() {
    const isAnyChecked = Array.from(studentCheckboxes).some(checkbox => checkbox.checked);
    unassignStudentsButton.classList.toggle('hidden', !isAnyChecked);
  }

  if (studentCheckboxes.length > 0) {
    studentCheckboxes.forEach(checkbox => {
      checkbox.addEventListener('change', toggleUnassignStudentsButton);
    });

    selectAllStudentsCheckbox.addEventListener('change', function() {
      studentCheckboxes.forEach(checkbox => {
        checkbox.checked = this.checked;
      });
      toggleUnassignStudentsButton();
    });
  }

  // Teachers batch unassign
  const unassignTeachersButton = document.getElementById('unassign_teachers');
  const teacherCheckboxes = document.querySelectorAll('.teacher-checkbox');
  const selectAllTeachersCheckbox = document.getElementById('select_all_teachers');

  function toggleUnassignTeachersButton() {
    const isAnyChecked = Array.from(teacherCheckboxes).some(checkbox => checkbox.checked);
    unassignTeachersButton.classList.toggle('hidden', !isAnyChecked);
  }

  if (teacherCheckboxes.length > 0) {
    teacherCheckboxes.forEach(checkbox => {
      checkbox.addEventListener('change', toggleUnassignTeachersButton);
    });

    selectAllTeachersCheckbox.addEventListener('change', function() {
      teacherCheckboxes.forEach(checkbox => {
        checkbox.checked = this.checked;
      });
      toggleUnassignTeachersButton();
    });
  }
});
</script>
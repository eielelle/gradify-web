<% if flash[:notice] %>
  <p class="alert"><%= flash[:notice] %></p>
<% end %>

<%= render "shared/toast", toast: flash[:toast] %>

<section data-controller="exam">
  <%= form_with(model: @exam, local: true, url: admin_exams_manage_path, data: { btn_class: "btn-primary" }) do |form| %>
    <div class="flex flex-wrap w-1/2 justify-between">
      <!-- Quarter Field -->
      <div class="form-control w-full max-w-xs mb-4"> <!-- Added mb-4 for margin-bottom -->
        <%= form.label :quarter, class: "label-text" %>
        <%= form.text_field :name, class: "input input-bordered w-full max-w-xs" %>
        <span class="label-text-alt text-error"><%= flash[:name_error] %></span>
      </div>

      <!-- Subject Field -->
      <div class="form-control w-full max-w-xs mb-4"> <!-- Added mb-4 for margin-bottom -->
        <%= form.label :subject_id, "Subject", class: "label-text" %>
        <%= form.collection_select :subject_id, @subjects, :id, :name, { prompt: "Select a subject" }, { class: "select select-bordered" } %>
        <span class="label-text-alt text-error"><%= flash[:subject_error] %></span>
      </div>

      <!-- Items Field -->
      <div class="form-control w-full max-w-xs mb-4"> <!-- Added mb-4 for margin-bottom -->
        <%= form.label :items, class: "label-text" %>
        <%= form.select :items, options_for_select([50]), {}, { class: "select select-bordered", id: "questions_count" } %>
        <span class="label-text-alt text-error"><%= flash[:items_error] %></span>
      </div>

      <!-- Answer Key Field -->
      <div class="form-control w-full mb-4">
        <%= form.label :answer_key, class: "label-text" %>
        <div class="container mx-auto p-4">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <!-- First 25 items (1-25) -->
            <div class="bubble-sheet w-full overflow-x-auto">
              <table class="table-auto border-collapse border border-gray-300 w-full">
                <thead>
                  <tr class="bg-gray-100 text-black">
                    <th class="border border-gray-300 px-4 py-2">Item #</th>
                    <th class="border border-gray-300 px-4 py-2">A</th>
                    <th class="border border-gray-300 px-4 py-2">B</th>
                    <th class="border border-gray-300 px-4 py-2">C</th>
                    <th class="border border-gray-300 px-4 py-2">D</th>
                  </tr>
                </thead>
                <tbody>
                  <% (1..25).each do |item_number| %>
                    <tr>
                      <td class="border border-gray-300 px-4 py-2 text-center"><%= item_number %></td>
                      <% ['A', 'B', 'C', 'D'].each do |option| %>
                        <td class="border border-gray-300 px-4 py-2 text-center">
                          <input type="radio" name="answer_<%= item_number %>" value="<%= option %>" class="w-5 h-5 cursor-pointer accent-primary"
                            <%= 'checked' if @exam.answer_key.present? && @exam.answer_key[item_number - 1] == option %> />
                        </td>
                      <% end %>
                    </tr>
                  <% end %>
                </tbody>
              </table>
            </div>

            <!-- Next 25 items (26-50) -->
            <div class="bubble-sheet w-full overflow-x-auto">
              <table class="table-auto border-collapse border border-gray-300 w-full">
                <thead>
                  <tr class="bg-gray-100 text-black">
                    <th class="border border-gray-300 px-4 py-2">Item #</th>
                    <th class="border border-gray-300 px-4 py-2">A</th>
                    <th class="border border-gray-300 px-4 py-2">B</th>
                    <th class="border border-gray-300 px-4 py-2">C</th>
                    <th class="border border-gray-300 px-4 py-2">D</th>
                  </tr>
                </thead>
                <tbody>
                  <% (26..50).each do |item_number| %>
                    <tr>
                      <td class="border border-gray-300 px-4 py-2 text-center"><%= item_number %></td>
                      <% ['A', 'B', 'C', 'D'].each do |option| %>
                        <td class="border border-gray-300 px-4 py-2 text-center">
                          <input type="radio" name="answer_<%= item_number %>" value="<%= option %>" class="w-5 h-5 cursor-pointer accent-primary"
                            <%= 'checked' if @exam.answer_key.present? && @exam.answer_key[item_number - 1] == option %> />
                        </td>
                      <% end %>
                    </tr>
                  <% end %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
        <span class="label-text-alt text-error"><%= flash[:answer_key_error] %></span>
      </div>
    </div>

    <!-- Submit Button -->
    <div>
      <%= form.submit "Update Exam", class: "btn btn-primary mt-4", data: { 'turbo-confirm': 'Are you sure you want to update this exam?', btn_class: "btn-primary" } %>
    </div>
  <% end %>
</section>

<script>
  const questionCountDropdown = document.getElementById('questions_count');
  const bubbleSheetContainer = document.getElementById('bubble_sheet');

  // Call the createBubbleSheet function with the current answer key
  createBubbleSheet(questionCountDropdown.value, "<%= @exam.answer_key || '' %>");

  function createBubbleSheet(count, answerKey = '') {
    bubbleSheetContainer.innerHTML = ''; // Clear existing content

    if (count > 0) {
      // Create two tables for the two sections
      for (let section = 0; section < 2; section++) {
        const table = document.createElement('table');
        table.classList.add("table", "w-full", "mt-2");
        table.border = "1";

        const header = table.createTHead();
        const headerRow = header.insertRow(0);
        headerRow.classList.add("bg-gray-200");
        headerRow.insertCell(0).innerText = "Question " + (section * 25 + 1) + " - " + ((section + 1) * 25);
        ['A', 'B', 'C', 'D'].forEach((option) => {
          headerRow.insertCell().innerText = option;
        });

        const startQuestion = section * 25 + 1;
        const endQuestion = Math.min((section + 1) * 25, count);

        for (let i = startQuestion; i <= endQuestion; i++) {
          const row = table.insertRow();
          const questionCell = row.insertCell(0);
          questionCell.innerText = i;

          const answer = answerKey[i - 1] || '_'; // Get saved answer or placeholder
          ['A', 'B', 'C', 'D'].forEach(option => {
            const optionCell = row.insertCell();
            const label = document.createElement('label');
            const radioButton = document.createElement('input');
            radioButton.type = 'radio';
            radioButton.name = `question_${i}`;
            radioButton.value = option;
            radioButton.classList.add("form-radio", "h-6", "w-6"); // Increase size

            // Preselect the answer based on the answer key
            if (option === answer) {
              radioButton.checked = true;
            }

            label.appendChild(radioButton);
            label.appendChild(document.createTextNode(option));
            optionCell.appendChild(label);
          });
        }

        bubbleSheetContainer.appendChild(table);
      }
    }
  }

  questionCountDropdown.addEventListener('change', (event) => {
    const selectedValue = parseInt(event.target.value, 10);
    if (selectedValue) {
      createBubbleSheet(selectedValue, "<%= @exam.answer_key || '' %>");
    } else {
      bubbleSheetContainer.innerHTML = '';
    }
  });
</script>
